// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: customer.proto

package server

import (
	"context"

	"xlife/apps/customer/rpc/customer"
	"xlife/apps/customer/rpc/internal/logic"
	"xlife/apps/customer/rpc/internal/svc"
)

type CustomerServer struct {
	svcCtx *svc.ServiceContext
	customer.UnimplementedCustomerServer
}

func NewCustomerServer(svcCtx *svc.ServiceContext) *CustomerServer {
	return &CustomerServer{
		svcCtx: svcCtx,
	}
}

func (s *CustomerServer) AddCustomer(ctx context.Context, in *customer.AddCustomerReq) (*customer.CustomerInfo, error) {
	l := logic.NewAddCustomerLogic(ctx, s.svcCtx)
	return l.AddCustomer(in)
}

func (s *CustomerServer) UpdateCustomer(ctx context.Context, in *customer.CustomerInfo) (*customer.CustomerInfo, error) {
	l := logic.NewUpdateCustomerLogic(ctx, s.svcCtx)
	return l.UpdateCustomer(in)
}

func (s *CustomerServer) DeleteCustomer(ctx context.Context, in *customer.DeleteCustomerReq) (*customer.DeleteCustomerResp, error) {
	l := logic.NewDeleteCustomerLogic(ctx, s.svcCtx)
	return l.DeleteCustomer(in)
}

func (s *CustomerServer) GetCustomer(ctx context.Context, in *customer.GetCustomerReq) (*customer.GetCustomerResp, error) {
	l := logic.NewGetCustomerLogic(ctx, s.svcCtx)
	return l.GetCustomer(in)
}
