// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: auth.proto

package dept

import (
	"context"

	"xlife/apps/auth/rpc/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddDeptReq         = auth.AddDeptReq
	AddDeptResp        = auth.AddDeptResp
	AddMenuReq         = auth.AddMenuReq
	AddMenuResp        = auth.AddMenuResp
	AddRoleReq         = auth.AddRoleReq
	AddRoleResp        = auth.AddRoleResp
	AddUserReq         = auth.AddUserReq
	AddUserResp        = auth.AddUserResp
	AssignRoleMenuReq  = auth.AssignRoleMenuReq
	AssignRoleMenuResp = auth.AssignRoleMenuResp
	AssignUserRoleReq  = auth.AssignUserRoleReq
	AssignUserRoleResp = auth.AssignUserRoleResp
	CasbinCheckReq     = auth.CasbinCheckReq
	CasbinCheckResp    = auth.CasbinCheckResp
	DeleteDeptReq      = auth.DeleteDeptReq
	DeleteDeptResp     = auth.DeleteDeptResp
	DeleteMenuReq      = auth.DeleteMenuReq
	DeleteMenuResp     = auth.DeleteMenuResp
	DeleteRoleReq      = auth.DeleteRoleReq
	DeleteRoleResp     = auth.DeleteRoleResp
	DeleteUserReq      = auth.DeleteUserReq
	DeleteUserResp     = auth.DeleteUserResp
	DeptData           = auth.DeptData
	DeptListReq        = auth.DeptListReq
	DeptListResp       = auth.DeptListResp
	GetMenuReq         = auth.GetMenuReq
	GetMenuResp        = auth.GetMenuResp
	LoginReq           = auth.LoginReq
	LoginResp          = auth.LoginResp
	MenuData           = auth.MenuData
	MenuListReq        = auth.MenuListReq
	MenuListResp       = auth.MenuListResp
	RefreshReq         = auth.RefreshReq
	ResetPasswordReq   = auth.ResetPasswordReq
	ResetPasswordResp  = auth.ResetPasswordResp
	RoleData           = auth.RoleData
	RoleListReq        = auth.RoleListReq
	RoleListResp       = auth.RoleListResp
	RoleMenuIdsReq     = auth.RoleMenuIdsReq
	RoleMenuIdsResp    = auth.RoleMenuIdsResp
	UpdateDeptReq      = auth.UpdateDeptReq
	UpdateDeptResp     = auth.UpdateDeptResp
	UpdateMenuReq      = auth.UpdateMenuReq
	UpdateMenuResp     = auth.UpdateMenuResp
	UpdateRoleReq      = auth.UpdateRoleReq
	UpdateRoleResp     = auth.UpdateRoleResp
	UpdateUserReq      = auth.UpdateUserReq
	UpdateUserResp     = auth.UpdateUserResp
	UserData           = auth.UserData
	UserListReq        = auth.UserListReq
	UserListResp       = auth.UserListResp
	UserRoleIdsReq     = auth.UserRoleIdsReq
	UserRoleIdsResp    = auth.UserRoleIdsResp

	Dept interface {
		AddDept(ctx context.Context, in *AddDeptReq, opts ...grpc.CallOption) (*AddDeptResp, error)
		DeleteDept(ctx context.Context, in *DeleteDeptReq, opts ...grpc.CallOption) (*DeleteDeptResp, error)
		UpdateDept(ctx context.Context, in *UpdateDeptReq, opts ...grpc.CallOption) (*UpdateDeptResp, error)
		DeptList(ctx context.Context, in *DeptListReq, opts ...grpc.CallOption) (*DeptListResp, error)
	}

	defaultDept struct {
		cli zrpc.Client
	}
)

func NewDept(cli zrpc.Client) Dept {
	return &defaultDept{
		cli: cli,
	}
}

func (m *defaultDept) AddDept(ctx context.Context, in *AddDeptReq, opts ...grpc.CallOption) (*AddDeptResp, error) {
	client := auth.NewDeptClient(m.cli.Conn())
	return client.AddDept(ctx, in, opts...)
}

func (m *defaultDept) DeleteDept(ctx context.Context, in *DeleteDeptReq, opts ...grpc.CallOption) (*DeleteDeptResp, error) {
	client := auth.NewDeptClient(m.cli.Conn())
	return client.DeleteDept(ctx, in, opts...)
}

func (m *defaultDept) UpdateDept(ctx context.Context, in *UpdateDeptReq, opts ...grpc.CallOption) (*UpdateDeptResp, error) {
	client := auth.NewDeptClient(m.cli.Conn())
	return client.UpdateDept(ctx, in, opts...)
}

func (m *defaultDept) DeptList(ctx context.Context, in *DeptListReq, opts ...grpc.CallOption) (*DeptListResp, error) {
	client := auth.NewDeptClient(m.cli.Conn())
	return client.DeptList(ctx, in, opts...)
}
