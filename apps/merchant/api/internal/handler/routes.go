// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package handler

import (
	"net/http"

	bossstore "xlife/apps/merchant/api/internal/handler/boss/store"
	bosssystemdept "xlife/apps/merchant/api/internal/handler/boss/system/dept"
	bosssystemmenu "xlife/apps/merchant/api/internal/handler/boss/system/menu"
	bosssystemrole "xlife/apps/merchant/api/internal/handler/boss/system/role"
	bosssystemuser "xlife/apps/merchant/api/internal/handler/boss/system/user"
	"xlife/apps/merchant/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: bossstore.AddStoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: bossstore.DeleteStoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: bossstore.StoreListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: bossstore.UpdateStoreHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/merchant/store"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: bosssystemdept.DeptCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: bosssystemdept.DeptDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: bosssystemdept.DeptListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: bosssystemdept.DeptUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/system/dept"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: bosssystemmenu.MenuCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: bosssystemmenu.MenuDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: bosssystemmenu.MenuInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: bosssystemmenu.MenuListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: bosssystemmenu.MenuUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/system/menu"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: bosssystemrole.RoleCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: bosssystemrole.RoleDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: bosssystemrole.RoleListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/menuIds",
				Handler: bosssystemrole.RoleMenuIdsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: bosssystemrole.RoleUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/system/role"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: bosssystemuser.UserCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: bosssystemuser.UserDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: bosssystemuser.UserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/restPwd",
				Handler: bosssystemuser.UserRestPwdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/roleIds",
				Handler: bosssystemuser.UserRoleIdsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: bosssystemuser.UserUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/system/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: bosssystemuser.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/system/user"),
	)
}
