// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: auth.proto

package menu

import (
	"context"

	"xlife/apps/auth/rpc/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddDeptReq      = auth.AddDeptReq
	AddDeptResp     = auth.AddDeptResp
	AddMenuReq      = auth.AddMenuReq
	AddMenuResp     = auth.AddMenuResp
	AddRoleReq      = auth.AddRoleReq
	AddRoleResp     = auth.AddRoleResp
	AddUserReq      = auth.AddUserReq
	AddUserResp     = auth.AddUserResp
	CasbinCheckReq  = auth.CasbinCheckReq
	CasbinCheckResp = auth.CasbinCheckResp
	DeleteDeptReq   = auth.DeleteDeptReq
	DeleteDeptResp  = auth.DeleteDeptResp
	DeleteMenuReq   = auth.DeleteMenuReq
	DeleteMenuResp  = auth.DeleteMenuResp
	DeleteRoleReq   = auth.DeleteRoleReq
	DeleteRoleResp  = auth.DeleteRoleResp
	DeleteUserReq   = auth.DeleteUserReq
	DeleteUserResp  = auth.DeleteUserResp
	DeptData        = auth.DeptData
	DeptListReq     = auth.DeptListReq
	DeptListResp    = auth.DeptListResp
	GetMenuReq      = auth.GetMenuReq
	GetMenuResp     = auth.GetMenuResp
	LoginReq        = auth.LoginReq
	LoginResp       = auth.LoginResp
	MenuData        = auth.MenuData
	MenuListReq     = auth.MenuListReq
	MenuListResp    = auth.MenuListResp
	RefreshReq      = auth.RefreshReq
	RoleData        = auth.RoleData
	RoleListReq     = auth.RoleListReq
	RoleListResp    = auth.RoleListResp
	RoleMenuIdsReq  = auth.RoleMenuIdsReq
	RoleMenuIdsResp = auth.RoleMenuIdsResp
	UpdateDeptReq   = auth.UpdateDeptReq
	UpdateDeptResp  = auth.UpdateDeptResp
	UpdateMenuReq   = auth.UpdateMenuReq
	UpdateMenuResp  = auth.UpdateMenuResp
	UpdateRoleReq   = auth.UpdateRoleReq
	UpdateRoleResp  = auth.UpdateRoleResp
	UpdateUserReq   = auth.UpdateUserReq
	UpdateUserResp  = auth.UpdateUserResp
	UserData        = auth.UserData
	UserListReq     = auth.UserListReq
	UserListResp    = auth.UserListResp
	UserRoleIdsReq  = auth.UserRoleIdsReq
	UserRoleIdsResp = auth.UserRoleIdsResp

	Menu interface {
		AddMenu(ctx context.Context, in *AddMenuReq, opts ...grpc.CallOption) (*AddMenuResp, error)
		DeleteMenu(ctx context.Context, in *DeleteMenuReq, opts ...grpc.CallOption) (*DeleteMenuResp, error)
		UpdateMenu(ctx context.Context, in *UpdateMenuReq, opts ...grpc.CallOption) (*UpdateMenuResp, error)
		MenuList(ctx context.Context, in *MenuListReq, opts ...grpc.CallOption) (*MenuListResp, error)
		GetMenu(ctx context.Context, in *GetMenuReq, opts ...grpc.CallOption) (*GetMenuResp, error)
	}

	defaultMenu struct {
		cli zrpc.Client
	}
)

func NewMenu(cli zrpc.Client) Menu {
	return &defaultMenu{
		cli: cli,
	}
}

func (m *defaultMenu) AddMenu(ctx context.Context, in *AddMenuReq, opts ...grpc.CallOption) (*AddMenuResp, error) {
	client := auth.NewMenuClient(m.cli.Conn())
	return client.AddMenu(ctx, in, opts...)
}

func (m *defaultMenu) DeleteMenu(ctx context.Context, in *DeleteMenuReq, opts ...grpc.CallOption) (*DeleteMenuResp, error) {
	client := auth.NewMenuClient(m.cli.Conn())
	return client.DeleteMenu(ctx, in, opts...)
}

func (m *defaultMenu) UpdateMenu(ctx context.Context, in *UpdateMenuReq, opts ...grpc.CallOption) (*UpdateMenuResp, error) {
	client := auth.NewMenuClient(m.cli.Conn())
	return client.UpdateMenu(ctx, in, opts...)
}

func (m *defaultMenu) MenuList(ctx context.Context, in *MenuListReq, opts ...grpc.CallOption) (*MenuListResp, error) {
	client := auth.NewMenuClient(m.cli.Conn())
	return client.MenuList(ctx, in, opts...)
}

func (m *defaultMenu) GetMenu(ctx context.Context, in *GetMenuReq, opts ...grpc.CallOption) (*GetMenuResp, error) {
	client := auth.NewMenuClient(m.cli.Conn())
	return client.GetMenu(ctx, in, opts...)
}
