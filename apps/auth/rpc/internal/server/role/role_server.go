// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: auth.proto

package server

import (
	"context"

	"xlife/apps/auth/rpc/auth"
	"xlife/apps/auth/rpc/internal/logic/role"
	"xlife/apps/auth/rpc/internal/svc"
)

type RoleServer struct {
	svcCtx *svc.ServiceContext
	auth.UnimplementedRoleServer
}

func NewRoleServer(svcCtx *svc.ServiceContext) *RoleServer {
	return &RoleServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServer) AddRole(ctx context.Context, in *auth.AddRoleReq) (*auth.AddRoleResp, error) {
	l := rolelogic.NewAddRoleLogic(ctx, s.svcCtx)
	return l.AddRole(in)
}

func (s *RoleServer) DeleteRole(ctx context.Context, in *auth.DeleteRoleReq) (*auth.DeleteRoleResp, error) {
	l := rolelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServer) UpdateRole(ctx context.Context, in *auth.UpdateRoleReq) (*auth.UpdateRoleResp, error) {
	l := rolelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleServer) RoleList(ctx context.Context, in *auth.RoleListReq) (*auth.RoleListResp, error) {
	l := rolelogic.NewRoleListLogic(ctx, s.svcCtx)
	return l.RoleList(in)
}

func (s *RoleServer) RoleMenuIds(ctx context.Context, in *auth.RoleMenuIdsReq) (*auth.RoleMenuIdsResp, error) {
	l := rolelogic.NewRoleMenuIdsLogic(ctx, s.svcCtx)
	return l.RoleMenuIds(in)
}
